{"version":3,"sources":["components/common/TextError/TextError.module.css","components/common/FormikControl/Controls/Input.module.css","components/common/FormikControl/Controls/CheckBox.module.css","components/common/FormikControl/Controls/Input.js","components/common/FormikControl/Controls/Textarea.js","components/common/FormikControl/Controls/Select.js","components/common/FormikControl/Controls/RadioButtons.js","components/common/FormikControl/Controls/CheckboxGroup.js","components/common/FormikControl/Controls/CheckBox.js","components/common/FormikControl/FormikControl.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","components/common/TextError/TextError.js"],"names":["module","exports","Input","props","label","name","error","rest","className","classes","formControl","input","inputError","id","bar","barError","htmlFor","component","TextError","Textarea","as","Select","options","map","option","value","key","RadioButtons","field","Fragment","type","checked","CheckboxGroup","includes","customCheckbox","FormikControl","control","CheckBox","DialogItem","dialog","navData","isActive","Active","Item","to","src","photo","Message","message","messageMy","my","its","AddMessageForm","validationSchema","Yup","newMessageBody","required","initialValues","onSubmit","values","submitProps","sendMessage","console","log","resetForm","formik","placeholder","disabled","isValid","Dialogs","state","dialogsPage","messageElements","messages","m","dialogElements","dialogs","dialogsItems","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","this","React","children"],"mappings":"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","file":"static/js/5.126daaab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"TextError_error__2prsr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Input_formControl__3XvQ8\",\"input\":\"Input_input__1lvc_\",\"inputError\":\"Input_inputError__JB4zq\",\"label\":\"Input_label__3kwMT\",\"bar\":\"Input_bar__2AqTf\",\"barError\":\"Input_barError__27iNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customCheckbox\":\"CheckBox_customCheckbox__7jC05\"};","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\nimport classes from \"./Input.module.css\"\n\nfunction Input (props) {\n  const { label, name, error, ...rest } = props\n\n  return (\n    <div className={classes.formControl}>\n      <Field className={classes.input + \" \" + (error && classes.inputError)} id={name} name={name}  {...rest} />\n      <span className={classes.bar  + \" \" + (error && classes.barError)}></span>\n      <label className={classes.label} htmlFor={name}>{label}</label>\n        <ErrorMessage component={TextError} name={name} />\n\n    </div>\n  )\n}\n\nexport default Input\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Textarea (props) {\n  const { label, name, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field as='textarea' id={name} name={name} {...rest} />\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Textarea\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Select (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field as='select' id={name} name={name} {...rest}>\n        {options.map(option => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.key}\n            </option>\n          )\n        })}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction RadioButtons (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label>{label}</label>\n      <Field name={name} >\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='radio'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value === option.value}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default RadioButtons\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction CheckboxGroup (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label>{label}</label>\n      <Field name={name}>\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='checkbox'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value.includes(option.value)}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default CheckboxGroup\n","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from \"../../TextError/TextError\";\r\nimport classes from \"./CheckBox.module.css\"\r\nfunction Input (props) {\r\n    const { label, name, ...rest } = props\r\n\r\n    return (\r\n        <div >\r\n            <Field className={classes.customCheckbox} type=\"checkbox\" id={name} name={name}  {...rest} />\r\n\r\n            <label  htmlFor={name}>{label}</label>\r\n            <ErrorMessage component={TextError} name={name} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\nimport Input from './Controls/Input'\nimport Textarea from './Controls/Textarea'\nimport Select from './Controls/Select'\nimport RadioButtons from './Controls/RadioButtons'\nimport CheckboxGroup from './Controls/CheckboxGroup'\nimport CheckBox from \"./Controls/CheckBox\";\n\n/*import DatePicker from './DatePicker'\nimport ChakraInput from './ChakraInput'*/\n\nfunction FormikControl (props) {\n  const { control, ...rest } = props\n  switch (control) {\n    case 'input':\n      return <Input {...rest} />\n    case 'textarea':\n      return <Textarea {...rest} />\n    case 'select':\n      return <Select {...rest} />\n    case 'radio':\n      return <RadioButtons {...rest} />\n    case 'checkboxGroup':\n      return <CheckboxGroup {...rest} />\n    case 'checkBox':\n      return <CheckBox {...rest} />\n   /*case 'date':\n      return <DatePicker {...rest} />*/\n    /*case 'chakraInput':\n      return <ChakraInput {...rest} />*/\n    default:\n      return null\n  }\n}\n\nexport default FormikControl\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__18WKA\",\"dialogsItems\":\"Dialogs_dialogsItems__1Zh3K\",\"messages\":\"Dialogs_messages__3wJwf\",\"message\":\"Dialogs_message__ZOLJ-\",\"its\":\"Dialogs_its__29gav\",\"my\":\"Dialogs_my__1MyXA\",\"dialog\":\"Dialogs_dialog__1Q_fA\",\"Active\":\"Dialogs_Active__xX2dz\"};","import classes from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <li className={classes.dialog}>\r\n                <NavLink className={(navData) => navData.isActive ? classes.Active : classes.Item}\r\n                         to={\"/dialogs/\" + props.id}>\r\n                    <img src={props.photo}/>\r\n                    <span>{props.name}</span>\r\n                </NavLink>\r\n        </li>\r\n    );\r\n}\r\n\r\n\r\nexport default DialogItem;\r\n","import classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n\r\n    return (\r\n        /*заменить тут как в тетради*/\r\n        <div className={classes.message + \" \" + (props.messageMy ? classes.my : classes.its)}>{props.message}</div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import classes from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport React from \"react\";\r\nimport {Formik, Form, ErrorMessage, Field} from 'formik'\r\nimport * as Yup from \"yup\";\r\nimport FormikControl from \"../common/FormikControl/FormikControl\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n    let messageElements = state.messages.map(m => <Message message={m.message} id={m.id}\r\n                                                           messageMy={m.messageMy} key={m.id}/>);\r\n    let dialogElements = state.dialogs.map(dialog => <DialogItem name={dialog.name} id={dialog.id}\r\n                                                                 photo={dialog.photo} key={dialog.id}/>);\r\n\r\n    /* If unauthorized user */\r\n\r\n    return (\r\n        <div\r\n            className={classes.dialogs}>\r\n            <div\r\n                className={classes.dialogsItems}>\r\n                <ul>\r\n                    {dialogElements}\r\n                </ul>\r\n            </div>\r\n            <div>\r\n                <div className={classes.messages}>\r\n                    {messageElements}\r\n                </div>\r\n                <AddMessageForm sendMessage={props.sendMessage}/>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n};\r\nconst AddMessageForm = (props) => {\r\n    const initialValues = {\r\n        newMessageBody: ''\r\n    }\r\n    const validationSchema = Yup.object({\r\n        newMessageBody: Yup.string().required('Required')\r\n    });\r\n    const onSubmit = (values, submitProps) => {\r\n        props.sendMessage(values.newMessageBody);\r\n        console.log('Submit', values)\r\n        submitProps.resetForm();\r\n    }\r\nreturn (\r\n    <Formik initialValues={initialValues} onSubmit={onSubmit} validationSchema={validationSchema}>\r\n        {formik => {\r\n            return (\r\n                <Form>\r\n                    <div>\r\n                        <FormikControl control=\"textarea\" placeholder='Enter your message' name=\"newMessageBody\"/>\r\n                    </div>\r\n                    <div>\r\n                        <button type='submit' disabled={!formik.isValid}>Send</button>\r\n                    </div>\r\n                </Form>\r\n            )\r\n        }}\r\n    </Formik>\r\n);\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;\r\n","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return{\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from \"react\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n// const DialogsContainer = (props) => {\r\n//\r\n//     let state = props.store.getState().dialogsPage;\r\n//\r\n//\r\n//     let onSendMessageClick = () => {\r\n//         props.store.dispatch(sendMessageCreator());\r\n//     }\r\n//\r\n//\r\n//     let onNewMessageChange = (body) => {\r\n//         props.store.dispatch(updateNewMessageBodyCreator(body));\r\n//     }\r\n//\r\n//     return (\r\n//         <Dialogs sendMessage={onSendMessageClick} updateNewMessageBody ={onNewMessageChange}\r\n//                 dialogsPage={state}/>\r\n//     );\r\n//\r\n// };\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps =(dispatch) => {\r\n    return{\r\n        sendMessage: (newMessageBody) =>{\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/*HOC*/\r\n// let AuthRedirectComponent =  withAuthRedirect(Dialogs);\r\n//\r\n// const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n;\r\n","import React from \"react\";\r\nimport classes from \"./TextError.module.css\"\r\nconst TextError = (props) => {\r\n\r\n    return(\r\n      <div className={classes.error}>\r\n          {props.children}\r\n      </div>\r\n    );\r\n}\r\nexport default TextError;"],"sourceRoot":""}