{"version":3,"sources":["components/common/TextError/TextError.module.css","components/common/FormikControl/Controls/Input.js","components/common/FormikControl/Controls/Textarea.js","components/common/FormikControl/Controls/Select.js","components/common/FormikControl/Controls/RadioButtons.js","components/common/FormikControl/Controls/CheckboxGroup.js","components/common/FormikControl/FormikControl.js","components/Login/Login.jsx","components/common/TextError/TextError.js"],"names":["module","exports","Input","props","label","name","rest","className","htmlFor","id","component","TextError","Textarea","as","Select","options","map","option","value","key","RadioButtons","field","Fragment","type","checked","CheckboxGroup","includes","FormikControl","control","LoginForm","validationSchema","Yup","email","required","password","initialValues","rememberMe","onSubmit","values","setStatus","login","console","log","formik","placeholder","disabled","isValid","status","connect","state","isAuth","auth","to","classes","error","children"],"mappings":"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","file":"static/js/6.61838a58.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"TextError_error__2prsr\"};","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Input (props) {\n  const { label, name, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Input\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Textarea (props) {\n  const { label, name, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field as='textarea' id={name} name={name} {...rest} />\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Textarea\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Select (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field as='select' id={name} name={name} {...rest}>\n        {options.map(option => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.key}\n            </option>\n          )\n        })}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction RadioButtons (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label>{label}</label>\n      <Field name={name} >\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='radio'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value === option.value}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default RadioButtons\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction CheckboxGroup (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label>{label}</label>\n      <Field name={name}>\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='checkbox'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value.includes(option.value)}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default CheckboxGroup\n","import React from 'react'\nimport Input from './Controls/Input'\nimport Textarea from './Controls/Textarea'\nimport Select from './Controls/Select'\nimport RadioButtons from './Controls/RadioButtons'\nimport CheckboxGroup from './Controls/CheckboxGroup'\n\n/*import DatePicker from './DatePicker'\nimport ChakraInput from './ChakraInput'*/\n\nfunction FormikControl (props) {\n  const { control, ...rest } = props\n  switch (control) {\n    case 'input':\n      return <Input {...rest} />\n    case 'textarea':\n      return <Textarea {...rest} />\n    case 'select':\n      return <Select {...rest} />\n    case 'radio':\n      return <RadioButtons {...rest} />\n    case 'checkboxGroup':\n      return <CheckboxGroup {...rest} />\n   /*case 'date':\n      return <DatePicker {...rest} />*/\n    /*case 'chakraInput':\n      return <ChakraInput {...rest} />*/\n    default:\n      return null\n  }\n}\n\nexport default FormikControl\n","import {Formik, Form, Field, ErrorMessage} from \"formik\";\r\nimport React from \"react\";\r\nimport * as Yup from 'yup'\r\nimport FormikControl from \"../common/FormikControl/FormikControl\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport TextError from \"../common/TextError/TextError\";\r\n\r\n\r\nconst LoginForm = (props) => {\r\n\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false\r\n    };\r\n\r\n    const onSubmit = (values, {setStatus} )=> {\r\n        props.login(values.email,values.password,values.rememberMe,setStatus);\r\n        console.log('Submit', values)\r\n    };\r\n\r\n\r\n    const validationSchema = Yup.object(\r\n        {\r\n            email: Yup.string().email('Invalid email format').required('Required'),\r\n            password: Yup.string().required('Required')\r\n\r\n        }\r\n    )\r\n\r\n    return (\r\n        <Formik initialValues={initialValues}\r\n        validationSchema={validationSchema}\r\n        onSubmit={onSubmit}>\r\n            {formik =>{\r\n                return(\r\n                    <Form>\r\n                        <div>\r\n                            <FormikControl control=\"input\" type=\"email\" name=\"email\" name=\"email\"\r\n                                   placeholder={\"Email\"} />\r\n                        </div>\r\n                        <div>\r\n                            <FormikControl control=\"input\" type=\"password\"  name=\"password\"\r\n                                   placeholder={\"Password\"} />\r\n                        </div>\r\n                        <div>\r\n                            <FormikControl control=\"input\"  type=\"checkbox\"\r\n                                    name=\"rememberMe\" /> remember me\r\n                        </div>\r\n                        <div>\r\n                            <button type='submit' disabled={!formik.isValid}>Login</button>\r\n                        </div>\r\n                        <TextError>{formik.status}</TextError>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nconst Login = (props) => {\r\n    if(props.isAuth) return <Navigate to=\"/profile\"/>\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n            <LoginForm login={props.login}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\r\nimport classes from \"./TextError.module.css\"\r\nconst TextError = (props) => {\r\n\r\n    return(\r\n      <div  className={classes.error}>\r\n          {props.children}\r\n      </div>\r\n    );\r\n}\r\nexport default TextError;"],"sourceRoot":""}