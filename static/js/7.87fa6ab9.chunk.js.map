{"version":3,"sources":["components/common/TextError/TextError.module.css","components/common/FormikControl/Controls/Input.module.css","components/common/FormikControl/Controls/CheckBox.module.css","components/common/FormikControl/Controls/Input.js","components/common/FormikControl/Controls/Textarea.js","components/common/FormikControl/Controls/Select.js","components/common/FormikControl/Controls/RadioButtons.js","components/common/FormikControl/Controls/CheckboxGroup.js","components/common/FormikControl/Controls/CheckBox.js","components/common/FormikControl/FormikControl.js","components/Settings/Settings.module.css","components/Settings/EditProfileForm.jsx","components/Settings/Settings.jsx","components/Settings/SettingsContainer.jsx","components/common/TextError/TextError.js"],"names":["module","exports","Input","props","label","name","error","rest","className","classes","formControl","input","inputError","id","bar","barError","htmlFor","component","TextError","Textarea","as","Select","options","map","option","value","key","RadioButtons","field","Fragment","type","checked","CheckboxGroup","includes","customCheckbox","FormikControl","control","CheckBox","EditProfileForm","initialValues","lookingForAJob","lookingForAJobDescription","email","password","rememberMe","validationSchema","Yup","required","onSubmit","values","setStatus","login","formik","console","log","placeholder","disabled","isValid","status","Settings","head","line","profile","connect","state","isAuth","auth","profilePage","getUserProfile","useEffect","Preloader","to","children"],"mappings":"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","file":"static/js/7.87fa6ab9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"TextError_error__2prsr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Input_formControl__3XvQ8\",\"input\":\"Input_input__1lvc_\",\"inputError\":\"Input_inputError__JB4zq\",\"label\":\"Input_label__3kwMT\",\"bar\":\"Input_bar__2AqTf\",\"barError\":\"Input_barError__27iNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customCheckbox\":\"CheckBox_customCheckbox__7jC05\"};","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\nimport classes from \"./Input.module.css\"\n\nfunction Input (props) {\n  const { label, name, error, ...rest } = props\n\n  return (\n    <div className={classes.formControl}>\n      <Field className={classes.input + \" \" + (error && classes.inputError)} id={name} name={name}  {...rest} />\n      <span className={classes.bar  + \" \" + (error && classes.barError)}></span>\n      <label className={classes.label} htmlFor={name}>{label}</label>\n        <ErrorMessage component={TextError} name={name} />\n\n    </div>\n  )\n}\n\nexport default Input\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Textarea (props) {\n  const { label, name, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field as='textarea' id={name} name={name} {...rest} />\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Textarea\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Select (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field as='select' id={name} name={name} {...rest}>\n        {options.map(option => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.key}\n            </option>\n          )\n        })}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction RadioButtons (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label>{label}</label>\n      <Field name={name} >\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='radio'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value === option.value}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default RadioButtons\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction CheckboxGroup (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label>{label}</label>\n      <Field name={name}>\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='checkbox'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value.includes(option.value)}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default CheckboxGroup\n","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from \"../../TextError/TextError\";\r\nimport classes from \"./CheckBox.module.css\"\r\nfunction Input (props) {\r\n    const { label, name, ...rest } = props\r\n\r\n    return (\r\n        <div >\r\n            <Field className={classes.customCheckbox} type=\"checkbox\" id={name} name={name}  {...rest} />\r\n\r\n            <label  htmlFor={name}>{label}</label>\r\n            <ErrorMessage component={TextError} name={name} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\nimport Input from './Controls/Input'\nimport Textarea from './Controls/Textarea'\nimport Select from './Controls/Select'\nimport RadioButtons from './Controls/RadioButtons'\nimport CheckboxGroup from './Controls/CheckboxGroup'\nimport CheckBox from \"./Controls/CheckBox\";\n\n/*import DatePicker from './DatePicker'\nimport ChakraInput from './ChakraInput'*/\n\nfunction FormikControl (props) {\n  const { control, ...rest } = props\n  switch (control) {\n    case 'input':\n      return <Input {...rest} />\n    case 'textarea':\n      return <Textarea {...rest} />\n    case 'select':\n      return <Select {...rest} />\n    case 'radio':\n      return <RadioButtons {...rest} />\n    case 'checkboxGroup':\n      return <CheckboxGroup {...rest} />\n    case 'checkBox':\n      return <CheckBox {...rest} />\n   /*case 'date':\n      return <DatePicker {...rest} />*/\n    /*case 'chakraInput':\n      return <ChakraInput {...rest} />*/\n    default:\n      return null\n  }\n}\n\nexport default FormikControl\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"head\":\"Settings_head__AnGJr\",\"line\":\"Settings_line__2e1cD\"};","import * as Yup from \"yup\";\r\nimport {Form, Formik} from \"formik\";\r\nimport FormikControl from \"../common/FormikControl/FormikControl\";\r\nimport TextError from \"../common/TextError/TextError\";\r\nimport React from \"react\";\r\n\r\nconst EditProfileForm = (props) => {\r\n\r\n    const initialValues = {\r\n\r\n        lookingForAJob: props.lookingForAJob,\r\n        lookingForAJobDescription: props.lookingForAJobDescription,\r\n\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false\r\n    };\r\n\r\n    const onSubmit = (values, {setStatus} )=> {\r\n        props.login(values.email,values.password,values.rememberMe,setStatus);\r\n    };\r\n\r\n\r\n    const validationSchema = Yup.object(\r\n        {\r\n            email: Yup.string().email('Invalid email format').required('Required'),\r\n            password: Yup.string().required('Required')\r\n\r\n        }\r\n    )\r\n\r\n\r\n\r\n    return(\r\n        <Formik initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}>\r\n            {formik =>{\r\n                console.log(formik);\r\n                return(\r\n                    <Form>\r\n                        <FormikControl control=\"checkBox\" name=\"lookingForAJob\" label=\"Looking for A job\"/>\r\n                        {\r\n                            formik.values.lookingForAJob &&\r\n                            <FormikControl control=\"textarea\" name=\"lookingForAJobDescription\" label=\"Looking for a job description\"/>}\r\n                        <div>\r\n                            <FormikControl label=\"About \" control=\"input\" type=\"email\" name=\"email\" name=\"email\"\r\n                                           placeholder={\"Email\"} />\r\n                        </div>\r\n                        <div>\r\n                            <FormikControl control=\"input\" type=\"password\"  name=\"password\"\r\n                                           placeholder={\"Password\"} />\r\n                        </div>\r\n                        <div>\r\n                            <FormikControl control=\"input\"  type=\"checkbox\"\r\n                                           name=\"rememberMe\" /> remember me\r\n                        </div>\r\n                        <div>\r\n                            <button type='submit' disabled={!formik.isValid}>Login</button>\r\n                        </div>\r\n                        <TextError>{formik.status}</TextError>\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    );\r\n}\r\nexport default EditProfileForm","import classes from './Settings.module.css'\r\nimport EditProfileForm from \"./EditProfileForm\";\r\n\r\nconst Settings = (props) => {\r\n\r\n    return (\r\n        <div className=\"content-block\">\r\n            <h3 className={classes.head}>Edit your Profile</h3>\r\n            <hr className={classes.line}/>\r\n            <EditProfileForm {...props.profile} />\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\n\r\n\r\nexport default Settings;\r\n","import Settings from \"./Settings\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile} from \"../../redux/profile-reducer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst SettingsContainer = (props) => {\r\n    useEffect(() => {\r\n        console.log(\"use\");\r\n        props.getUserProfile(props.id)\r\n    },[props.id]);\r\n\r\n    return (\r\n        <>\r\n            {props.isAuth ?\r\n                <>\r\n                    {props.profile ?\r\n                        <Settings {...props}/>\r\n                        : <Preloader/>\r\n                    }\r\n\r\n                </>\r\n                : <Navigate to=\"/login\"/>}\r\n        </>\r\n    );\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    profile: state.profilePage.profile,\r\n    id: state.auth.id\r\n})\r\n\r\nexport default connect(mapStateToProps, {getUserProfile})(SettingsContainer)","import React from \"react\";\r\nimport classes from \"./TextError.module.css\"\r\nconst TextError = (props) => {\r\n\r\n    return(\r\n      <div className={classes.error}>\r\n          {props.children}\r\n      </div>\r\n    );\r\n}\r\nexport default TextError;"],"sourceRoot":""}