{"version":3,"sources":["components/common/TextError/TextError.module.css","components/common/FormikControl/Controls/Input.js","components/common/FormikControl/Controls/Textarea.js","components/common/FormikControl/Controls/Select.js","components/common/FormikControl/Controls/RadioButtons.js","components/common/FormikControl/Controls/CheckboxGroup.js","components/common/FormikControl/FormikControl.js","hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/AddNewPostForm/AddNewPostForm.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/common/TextError/TextError.js"],"names":["module","exports","Input","props","label","name","rest","className","htmlFor","id","component","TextError","Textarea","as","Select","options","map","option","value","key","RadioButtons","field","Fragment","type","checked","CheckboxGroup","includes","FormikControl","control","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","to","React","connect","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","classes","aboutMe","aboutAdd","autoFocus","onChange","e","currentTarget","onBlur","updateUserStatus","ProfileInfo","profile","descriptionBlock","imageBlock","alt","src","photos","large","userPhoto","description","wrapperDescription","fullName","isMyProfile","line","workStatus","lookingForAJob","lookingForAJobDescription","DescriptionBlock","DescriptionTitle","social","href","contacts","facebook","target","title","icon","twitter","instagram","youtube","vk","github","website","Preloader","Post","message","likesCount","dislikesCount","AddNewPostForm","validationSchema","Yup","newPostText","required","onSubmit","values","submitProps","addPost","resetForm","initialValues","formik","disabled","isValid","MyPosts","console","log","postElements","posts","slice","reverse","p","post","postsBlock","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","idUser","ProfileContainer","isUser","userId","params","authorizedUserId","setState","getUserStatus","getUserProfile","compose","WrappedComponent","useParams","error","children"],"mappings":"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","file":"static/js/4.84cf9c25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"TextError_error__2prsr\"};","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Input (props) {\n  const { label, name, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field id={name} name={name} {...rest} />\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Input\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Textarea (props) {\n  const { label, name, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field as='textarea' id={name} name={name} {...rest} />\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Textarea\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Select (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field as='select' id={name} name={name} {...rest}>\n        {options.map(option => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.key}\n            </option>\n          )\n        })}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction RadioButtons (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label>{label}</label>\n      <Field name={name} >\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='radio'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value === option.value}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default RadioButtons\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction CheckboxGroup (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label>{label}</label>\n      <Field name={name}>\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='checkbox'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value.includes(option.value)}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default CheckboxGroup\n","import React from 'react'\nimport Input from './Controls/Input'\nimport Textarea from './Controls/Textarea'\nimport Select from './Controls/Select'\nimport RadioButtons from './Controls/RadioButtons'\nimport CheckboxGroup from './Controls/CheckboxGroup'\n\n/*import DatePicker from './DatePicker'\nimport ChakraInput from './ChakraInput'*/\n\nfunction FormikControl (props) {\n  const { control, ...rest } = props\n  switch (control) {\n    case 'input':\n      return <Input {...rest} />\n    case 'textarea':\n      return <Textarea {...rest} />\n    case 'select':\n      return <Select {...rest} />\n    case 'radio':\n      return <RadioButtons {...rest} />\n    case 'checkboxGroup':\n      return <CheckboxGroup {...rest} />\n   /*case 'date':\n      return <DatePicker {...rest} />*/\n    /*case 'chakraInput':\n      return <ChakraInput {...rest} />*/\n    default:\n      return null\n  }\n}\n\nexport default FormikControl\n","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return{\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to=\"/login\"/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2VsLS\",\"imageBlock\":\"ProfileInfo_imageBlock__1YnZY\",\"description\":\"ProfileInfo_description__14vCs\",\"wrapperDescription\":\"ProfileInfo_wrapperDescription__17q_I\",\"name\":\"ProfileInfo_name__1rymr\",\"aboutMe\":\"ProfileInfo_aboutMe__2FCN9\",\"aboutAdd\":\"ProfileInfo_aboutAdd__wzQI0\",\"line\":\"ProfileInfo_line__vKgx3\",\"workStatus\":\"ProfileInfo_workStatus__4Bl6j\",\"DescriptionBlock\":\"ProfileInfo_DescriptionBlock__26at0\",\"DescriptionTitle\":\"ProfileInfo_DescriptionTitle__3KyqE\",\"social\":\"ProfileInfo_social__1ryq-\",\"icon\":\"ProfileInfo_icon__1VvO9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1gYnF\",\"posts\":\"MyPosts_posts__jN_Ld\"};","import React, {useEffect, useState} from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    },[props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n            {!editMode &&\r\n            <div>\r\n                        <span onClick={activateEditMode} className={classes.aboutMe}>{props.status ? props.status :\r\n                            <span className={classes.aboutAdd}>Установить статус</span>} </span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input value={status} autoFocus={true} onChange={onStatusChange} onBlur={deactivateEditMode}\r\n                />\r\n            </div>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import classes from './ProfileInfo.module.css'\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport React from \"react\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nconst ProfileInfo = (props) => {\r\n\r\n    if (!props.profile)\r\n        return <Preloader/>\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.descriptionBlock}>\r\n                <div className={classes.imageBlock}>\r\n                    <img alt={\"\"}\r\n                         src={props.profile.photos.large != null ? props.profile.photos.large : userPhoto }/>\r\n                </div>\r\n\r\n                <div className={classes.description}>\r\n                    <div className={classes.wrapperDescription}>\r\n\r\n                        <span className={classes.name}>{props.profile.fullName}</span>\r\n                        <ProfileStatusWithHooks isMyProfile={props.isMyProfile} status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n\r\n                        <hr className={classes.line}/>\r\n                        <span\r\n                            className={classes.workStatus}>{props.profile.lookingForAJob ? 'В поисках работы. ' : 'Не ищу работу.'}</span>\r\n                        {props.profile.lookingForAJobDescription ? (\r\n                            <div className={classes.DescriptionBlock}>\r\n                                <span className={classes.DescriptionTitle}>Описание работы: </span>\r\n                                <span>{props.profile.lookingForAJobDescription}</span>\r\n                            </div>\r\n                        ) : null}\r\n                        {props.profile.aboutMe ? (\r\n                            <div className={classes.DescriptionBlock}>\r\n                                <span className={classes.DescriptionTitle}>Обо мне: </span>\r\n                                <span>{props.profile.aboutMe}</span>\r\n                            </div>\r\n                        ) : null}\r\n                        <div className={classes.social}>\r\n                            <a href={props.profile.contacts.facebook} target=\"_blank\" title=\"facebook\">\r\n                                <FontAwesomeIcon className={classes.icon} icon={['fab', 'facebook-f']}/>\r\n                            </a>\r\n                            <a href={props.profile.contacts.twitter} target=\"_blank\" title=\"twitter\">\r\n                                <FontAwesomeIcon className={classes.icon} icon={['fab', 'twitter']}/>\r\n                            </a>\r\n                            <a href={props.profile.contacts.instagram} target=\"_blank\" title=\"instagram\">\r\n                                <FontAwesomeIcon className={classes.icon} icon={['fab', 'instagram']}/>\r\n                            </a>\r\n                            <a href={props.profile.contacts.youtube}  target=\"_blank\" title=\"youtube\">\r\n                                <FontAwesomeIcon className={classes.icon} icon={['fab', 'youtube']}/>\r\n                            </a>\r\n                            <a href={props.profile.contacts.vk} target=\"_blank\" title=\"vk\">\r\n                                <FontAwesomeIcon className={classes.icon} icon={['fab', 'vk']}/>\r\n                            </a>\r\n                            <a href={props.profile.contacts.github} target=\"_blank\" title=\"github\">\r\n                                <FontAwesomeIcon className={classes.icon} icon={['fab', 'github']}/>\r\n                            </a>\r\n                            <a href={props.profile.contacts.website} target=\"_blank\" title=\"personal website\">\r\n                                <FontAwesomeIcon className={classes.icon} icon=\"chalkboard-teacher\"/>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProfileInfo;","import classes from './Post.module.css'\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\n\r\nconst Post = (props) =>{\r\n    return(\r\n            <div>\r\n                <img/>\r\n                {props.message} \r\n                <div>\r\n                    <span> <FontAwesomeIcon icon={\"heart\"} /> {props.likesCount} Like     </span>\r\n                    <span> <FontAwesomeIcon icon={\"heart-broken\"}/> {props.dislikesCount} Dislike</span>\r\n                 </div>\r\n            </div>\r\n    );\r\n};\r\n\r\nexport default Post;","import React from 'react'\r\nimport {Formik, Form, ErrorMessage, Field} from 'formik'\r\nimport FormikControl from \"../../../common/FormikControl/FormikControl\";\r\nimport * as Yup from \"yup\";\r\n\r\nconst AddNewPostForm = (props) => {\r\n\r\n    const initialValues = {\r\n        newPostText: ''\r\n    }\r\n\r\n    const onSubmit = (values,  submitProps) => {\r\n        props.addPost(values.newPostText);\r\n        submitProps.resetForm();\r\n    }\r\n\r\n    const validationSchema = Yup.object(\r\n        {\r\n            newPostText: Yup.string().required('Required'),\r\n        });\r\n\r\n    return (\r\n        <Formik onSubmit={onSubmit} initialValues={initialValues} validationSchema={validationSchema}>\r\n            {formik => {\r\n                return (\r\n                    <Form>\r\n                        <div>\r\n                            <FormikControl control=\"textarea\" name=\"newPostText\"/>\r\n                        </div>\r\n                        <div>\r\n                            <button type=\"submit\" disabled={!formik.isValid}>Add post</button>\r\n                        </div>\r\n                    </Form>\r\n                )\r\n            }}\r\n\r\n        </Formik>\r\n    );\r\n}\r\n\r\nexport default AddNewPostForm\r\n\r\n","import classes from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport AddNewPostForm from \"./AddNewPostForm/AddNewPostForm\";\r\n\r\n\r\nconst MyPosts = (props) => {\r\n    console.log('render');\r\n    let postElements = props.posts.slice().reverse().map(p => <Post message={p.post} likesCount={p.likesCount}\r\n                                                  dislikesCount={p.dislikesCount} key={p.id}/>)\r\n    /* Work with Ref\r\n        let newPostElement = React.createRef();\r\n        let text = newPostElement.current.value;\r\n     */\r\n\r\n\r\n\r\n    return (\r\n        <div className={classes.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm addPost={props.addPost}/>\r\n            <div>\r\n            </div>\r\n            <div className={classes.posts}>\r\n                {postElements}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\n// const MyPostsContainer = (props) => {\r\n//\r\n//\r\n//     return (\r\n//         <StoreContex.Consumer>\r\n//             { (store) => {\r\n//\r\n//                 let state = store.getState();\r\n//                 let addPost = () => {\r\n//                     store.dispatch(addPostActionCreator());\r\n//                 }\r\n//\r\n//                 let onPostChange = (text) => {\r\n//                     store.dispatch(updateNewPostTextActionCreator(text));\r\n//                 }\r\n//                 return  <MyPosts updateNewPostText={onPostChange} addPost={addPost} posts={state.profilePage.posts}\r\n//                          newPostText={state.profilePage.newPostText}/>\r\n//             }\r\n//             }\r\n//         </StoreContex.Consumer>\r\n//\r\n//\r\n//     );\r\n// };\r\n\r\n\r\nlet mapStateToProps = (state) =>{\r\n    return{\r\n        posts: state.profilePage.posts\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) =>{\r\n    return{\r\n        addPost: (newPostText) =>{\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps,mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import classes from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport React from \"react\";\r\n\r\n\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo  idUser={props.idUser} profile={props.profile} status={props.status} updateUserStatus={props.updateUserStatus} />\r\n            <MyPostsContainer   />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {getUserStatus, getUserProfile, updateUserStatus} from \"../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate, useMatch, useParams} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\nconst withRouter = WrappedComponent => props => {\r\n    const params = useParams();\r\n    // etc... other react-router-dom v6 hooks\r\n    return (\r\n        <WrappedComponent\r\n            {...props}\r\n            params={params}\r\n            // etc...\r\n        />\r\n    );\r\n};\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    state = {\r\n        isUser: true\r\n    }\r\n    componentDidMount() {\r\n        let userId = this.props.params.userId ? this.props.params.userId : this.props.authorizedUserId;\r\n        if(!userId) this.setState({isUser: false})\r\n        this.props.getUserStatus(userId);\r\n        this.props.getUserProfile(userId);\r\n    }\r\n\r\n\r\n    render() {\r\n        if(!this.state.isUser) return <Navigate to=\"/login\" />\r\n            return (\r\n\r\n            <Profile {...this.props}    /*profile={this.props.profile}*/ />\r\n        )\r\n    };\r\n};\r\n\r\n/*HOC*/\r\n//\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n//\r\n//\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n//\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n// let ProfileMatch = (props) => {\r\n//     let match = useMatch(\"/profile/:userId\");\r\n//     return <AuthRedirectComponent {...props} match={match}/>;\r\n// };\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile,getUserStatus,updateUserStatus}),\r\n    withRouter,\r\n   /* withAuthRedirect*/\r\n)(ProfileContainer);\r\n\r\n\r\n","import React from \"react\";\r\nimport classes from \"./TextError.module.css\"\r\nconst TextError = (props) => {\r\n\r\n    return(\r\n      <div  className={classes.error}>\r\n          {props.children}\r\n      </div>\r\n    );\r\n}\r\nexport default TextError;"],"sourceRoot":""}