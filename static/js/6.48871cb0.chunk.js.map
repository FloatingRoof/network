{"version":3,"sources":["components/common/TextError/TextError.module.css","components/common/FormikControl/Controls/Input.module.css","components/common/FormikControl/Controls/CheckBox.module.css","components/common/FormikControl/Controls/Input.js","components/common/FormikControl/Controls/Textarea.js","components/common/FormikControl/Controls/Select.js","components/common/FormikControl/Controls/RadioButtons.js","components/common/FormikControl/Controls/CheckboxGroup.js","components/common/FormikControl/Controls/CheckBox.js","components/common/FormikControl/FormikControl.js","components/Login/Login.module.css","components/Login/Login.jsx","components/common/TextError/TextError.js"],"names":["module","exports","Input","props","label","name","error","rest","className","classes","formControl","input","inputError","id","bar","barError","htmlFor","component","TextError","Textarea","as","Select","options","map","option","value","key","RadioButtons","field","Fragment","type","checked","CheckboxGroup","includes","customCheckbox","FormikControl","control","CheckBox","LoginForm","validationSchema","Yup","email","required","password","initialValues","rememberMe","onSubmit","values","setStatus","login","console","log","formik","touched","errors","blockButton","button","disabled","isValid","blockError","status","connect","state","isAuth","auth","to","mainBlock","children"],"mappings":"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","file":"static/js/6.48871cb0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"TextError_error__2prsr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"Input_formControl__3XvQ8\",\"input\":\"Input_input__1lvc_\",\"inputError\":\"Input_inputError__JB4zq\",\"label\":\"Input_label__3kwMT\",\"bar\":\"Input_bar__2AqTf\",\"barError\":\"Input_barError__27iNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"customCheckbox\":\"CheckBox_customCheckbox__7jC05\"};","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\nimport classes from \"./Input.module.css\"\n\nfunction Input (props) {\n  const { label, name, error, ...rest } = props\n\n  return (\n    <div className={classes.formControl}>\n      <Field className={classes.input + \" \" + (error && classes.inputError)} id={name} name={name}  {...rest} />\n      <span className={classes.bar  + \" \" + (error && classes.barError)}></span>\n      <label className={classes.label} htmlFor={name}>{label}</label>\n        <ErrorMessage component={TextError} name={name} />\n\n    </div>\n  )\n}\n\nexport default Input\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Textarea (props) {\n  const { label, name, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field as='textarea' id={name} name={name} {...rest} />\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Textarea\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction Select (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label htmlFor={name}>{label}</label>\n      <Field as='select' id={name} name={name} {...rest}>\n        {options.map(option => {\n          return (\n            <option key={option.value} value={option.value}>\n              {option.key}\n            </option>\n          )\n        })}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default Select\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction RadioButtons (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label>{label}</label>\n      <Field name={name} >\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='radio'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value === option.value}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default RadioButtons\n","import React from 'react'\nimport { Field, ErrorMessage } from 'formik'\nimport TextError from \"../../TextError/TextError\";\n\nfunction CheckboxGroup (props) {\n  const { label, name, options, ...rest } = props\n  return (\n    <div className='form-control'>\n      <label>{label}</label>\n      <Field name={name}>\n        {({ field }) => {\n          return options.map(option => {\n            return (\n              <React.Fragment key={option.key}>\n                <input\n                  type='checkbox'\n                  id={option.value}\n                  {...field}\n                  {...rest}\n                  value={option.value}\n                  checked={field.value.includes(option.value)}\n                />\n                <label htmlFor={option.value}>{option.key}</label>\n              </React.Fragment>\n            )\n          })\n        }}\n      </Field>\n      <ErrorMessage component={TextError} name={name} />\n    </div>\n  )\n}\n\nexport default CheckboxGroup\n","import React from 'react'\r\nimport { Field, ErrorMessage } from 'formik'\r\nimport TextError from \"../../TextError/TextError\";\r\nimport classes from \"./CheckBox.module.css\"\r\nfunction Input (props) {\r\n    const { label, name, ...rest } = props\r\n\r\n    return (\r\n        <div >\r\n            <Field className={classes.customCheckbox} type=\"checkbox\" id={name} name={name}  {...rest} />\r\n\r\n            <label  htmlFor={name}>{label}</label>\r\n            <ErrorMessage component={TextError} name={name} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\nimport Input from './Controls/Input'\nimport Textarea from './Controls/Textarea'\nimport Select from './Controls/Select'\nimport RadioButtons from './Controls/RadioButtons'\nimport CheckboxGroup from './Controls/CheckboxGroup'\nimport CheckBox from \"./Controls/CheckBox\";\n\n/*import DatePicker from './DatePicker'\nimport ChakraInput from './ChakraInput'*/\n\nfunction FormikControl (props) {\n  const { control, ...rest } = props\n  switch (control) {\n    case 'input':\n      return <Input {...rest} />\n    case 'textarea':\n      return <Textarea {...rest} />\n    case 'select':\n      return <Select {...rest} />\n    case 'radio':\n      return <RadioButtons {...rest} />\n    case 'checkboxGroup':\n      return <CheckboxGroup {...rest} />\n    case 'checkBox':\n      return <CheckBox {...rest} />\n   /*case 'date':\n      return <DatePicker {...rest} />*/\n    /*case 'chakraInput':\n      return <ChakraInput {...rest} />*/\n    default:\n      return null\n  }\n}\n\nexport default FormikControl\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainBlock\":\"Login_mainBlock__zWe3G\",\"field\":\"Login_field__1QQYn\",\"button\":\"Login_button__2AW25\",\"blockButton\":\"Login_blockButton__2UCNr\",\"blockError\":\"Login_blockError__2AqgI\"};","import {Formik, Form, Field, ErrorMessage} from \"formik\";\r\nimport React from \"react\";\r\nimport * as Yup from 'yup'\r\nimport FormikControl from \"../common/FormikControl/FormikControl\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport TextError from \"../common/TextError/TextError\";\r\nimport classes from \"./Login.module.css\"\r\n\r\nconst LoginForm = (props) => {\r\n\r\n\r\n    const initialValues = {\r\n        email: '',\r\n        password: '',\r\n        rememberMe: false\r\n    };\r\n\r\n    const onSubmit = (values, {setStatus}) => {\r\n        props.login(values.email, values.password, values.rememberMe, setStatus);\r\n        console.log('Submit', values)\r\n    };\r\n\r\n\r\n    const validationSchema = Yup.object(\r\n        {\r\n            email: Yup.string().email('Invalid email format').required('Required'),\r\n            password: Yup.string().required('Required')\r\n\r\n        }\r\n    )\r\n\r\n    return (\r\n        <Formik initialValues={initialValues}\r\n                validationSchema={validationSchema}\r\n                onSubmit={onSubmit}>\r\n            {formik => {\r\n                return (\r\n                    <Form>\r\n                        <div className={classes.field}>\r\n                            <FormikControl error={formik.touched.email && formik.errors.email} label=\"Email\"\r\n                                           control=\"input\" type=\"email\" name=\"email\" name=\"email\"\r\n                            />\r\n                        </div>\r\n                        <div className={classes.field}>\r\n                            <FormikControl error={formik.touched.password && formik.errors.password} control=\"input\"\r\n                                           type=\"password\" name=\"password\"\r\n                                           label={\"Password\"}/>\r\n                        </div>\r\n                        <div className={classes.field}>\r\n                            <FormikControl control=\"checkBox\"\r\n                                           label=\"Remember me\" name=\"rememberMe\"/>\r\n                        </div>\r\n                        <div className={classes.blockButton}>\r\n                            <button className={classes.button} type='submit' disabled={!formik.isValid}>\r\n                                LOGIN\r\n                            </button>\r\n                        </div>\r\n                        <div className={classes.blockError}>\r\n                            <TextError>{formik.status}</TextError>\r\n                        </div>\r\n\r\n\r\n                    </Form>\r\n                )\r\n            }}\r\n        </Formik>\r\n    );\r\n}\r\n\r\nconst Login = (props) => {\r\n    if (props.isAuth) return <Navigate to=\"/profile\"/>\r\n    return (\r\n        <div className={\"content-block \" + classes.mainBlock}>\r\n            <div>\r\n                <h1>Login</h1>\r\n                <LoginForm login={props.login}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login);","import React from \"react\";\r\nimport classes from \"./TextError.module.css\"\r\nconst TextError = (props) => {\r\n\r\n    return(\r\n      <div className={classes.error}>\r\n          {props.children}\r\n      </div>\r\n    );\r\n}\r\nexport default TextError;"],"sourceRoot":""}